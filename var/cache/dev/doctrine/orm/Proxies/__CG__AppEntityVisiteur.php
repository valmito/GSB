<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Visiteur extends \App\Entity\Visiteur implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

        return parent::__get($name);
    }





    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'login', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'mdp', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'ficheFrais', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'cp', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'ville', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'dateEmbauche', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'prenom'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'login', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'mdp', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'ficheFrais', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'cp', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'ville', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'dateEmbauche', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Visiteur' . "\0" . 'prenom'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Visiteur $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogin(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogin', []);

        return parent::getLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogin(string $login): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogin', [$login]);

        return parent::setLogin($login);
    }

    /**
     * {@inheritDoc}
     */
    public function getMdp(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMdp', []);

        return parent::getMdp();
    }

    /**
     * {@inheritDoc}
     */
    public function setMdp(string $mdp): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMdp', [$mdp]);

        return parent::setMdp($mdp);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getFicheFrais(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFicheFrais', []);

        return parent::getFicheFrais();
    }

    /**
     * {@inheritDoc}
     */
    public function addFicheFrai(\App\Entity\FicheFrais $ficheFrai): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFicheFrai', [$ficheFrai]);

        return parent::addFicheFrai($ficheFrai);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFicheFrai(\App\Entity\FicheFrais $ficheFrai): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFicheFrai', [$ficheFrai]);

        return parent::removeFicheFrai($ficheFrai);
    }

    /**
     * {@inheritDoc}
     */
    public function getCp(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCp', []);

        return parent::getCp();
    }

    /**
     * {@inheritDoc}
     */
    public function setCp(string $cp): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCp', [$cp]);

        return parent::setCp($cp);
    }

    /**
     * {@inheritDoc}
     */
    public function getVille(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVille', []);

        return parent::getVille();
    }

    /**
     * {@inheritDoc}
     */
    public function setVille(string $ville): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVille', [$ville]);

        return parent::setVille($ville);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEmbauche(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEmbauche', []);

        return parent::getDateEmbauche();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEmbauche(\DateTimeInterface $dateEmbauche): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEmbauche', [$dateEmbauche]);

        return parent::setDateEmbauche($dateEmbauche);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', []);

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse(string $adresse): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', [$adresse]);

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $nom): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom(string $prenom): \App\Entity\Visiteur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

}
